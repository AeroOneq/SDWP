<Page x:Class="SDWP.DocumentTemplatesPage"
      x:Name="documentTemplatesPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SDWP"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">

    <Page.Resources>
        <Style x:Key="templateOptionsTextBlockStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="Arial, Verdana"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>

        <Style TargetType="ListBoxItem">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0, 10, 0, 0"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="border"     
                                SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5"
                                BorderThickness="1"
                                BorderBrush="Gray">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="#f0f0f0"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="#f0f0f0"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="LightGray"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="#f0f0f0"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <EventSetter Event="MouseEnter" Handler="ListBoxItemMouseEnter"/>
            <EventSetter Event="MouseLeave" Handler="ListBoxItemMouseLeave"/>
            <EventSetter Event="PreviewMouseDown" Handler="ListBoxItemMouseDown"/>
        </Style>

        <DataTemplate x:Key="localTemplateListBoxDataTemplate">
            <Grid VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Margin="0, 0, 0, 0"
                  Width="280">
                <Border x:Name="border"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Width="280"
                        Height="50"
                        BorderThickness="0"
                        Background="Transparent"
                        Padding="5"
                        BorderBrush="Gray"
                        Margin="0, 0, 0, 0">
                    <StackPanel VerticalAlignment="Top"
                                HorizontalAlignment="Left"
                                Height="50"
                                Width="280"
                                Orientation="Vertical">
                        <StackPanel VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Orientation="Horizontal"
                                    Height="50"
                                    Width="280">
                            <Image Source="../Resources/documentationIcon.png"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left"
                                   Height="20"
                                   Width="20"
                                   Margin="5, -12, 0, 0"/>
                            <TextBlock Text="{Binding Path = FileName, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{StaticResource templateOptionsTextBlockStyle}"
                                       Margin="10, -10, 0, 0"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="cloudTemplateListBoxDataTemplate">
            <Grid VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Margin="0, 0, 0, 0"
                  Width="280">
                <Border x:Name="border"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Width="280"
                        Height="50"
                        BorderThickness="0"
                        Background="Transparent"
                        Padding="5"
                        BorderBrush="Gray"
                        Margin="0, 0, 0, 0">
                    <StackPanel VerticalAlignment="Top"
                                HorizontalAlignment="Left"
                                Height="50"
                                Width="280"
                                Orientation="Vertical">
                        <StackPanel VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Orientation="Horizontal"
                                    Height="50"
                                    Width="280">
                            <Image Source="../Resources/documentationIcon.png"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left"
                                   Height="20"
                                   Width="20"
                                   Margin="5, -12, 0, 0"/>
                            <TextBlock Text="{Binding Path = TemplateName, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{StaticResource templateOptionsTextBlockStyle}"
                                       Margin="10, -10, 0, 0"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>

        <Style x:Key="templatesListBoxStyle" TargetType="ListBox">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Background" Value="#E1E1E1"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="Height" Value="400"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="BorderThickness" Value="0, 0, 1, 0"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="Padding" Value="0, 0, 10, 0"/>
            <Setter Property="SelectionMode" Value="Single"/>
        </Style>

        <Style x:Key="filePathTextBoxStyle" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="Arial, Verdana"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="5, 5, 5, 5"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                                BorderThickness="1"
                                BorderBrush="LightGray"
                                CornerRadius="10"
                                Background="White"
                                Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="templatesProperteisBtnStyle" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Width" Value="110"/>
            <Setter Property="Height" Value="30"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                BorderThickness="1"
                                CornerRadius="10"
                                Background="#F0F0F0"
                                BorderBrush="LightGray"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="contentPresenter"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"/>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                            Storyboard.TargetName="border"
                                                            To="{StaticResource mainThemeColor}"
                                                            SpeedRatio="100"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="BorderBrush.Color"
                                                            To="#F0F0F0"
                                                            SpeedRatio="100"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="templateTypesTextBlockStyle" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment"  Value="Left"/>
            <Setter Property="FontFamily" Value="Arial, Verdana"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="Light"/>

            <EventSetter Event="MouseEnter" Handler="TemplateTypesTextBlockMouseEnter"/>
            <EventSetter Event="MouseLeave" Handler="TemplateTypesTextBlockMouseLeave"/>
        </Style>

        <ContextMenu x:Key="treeViewItemItemContextMenu">
            <MenuItem Header="Добавить новый пункт"
                      Click="AddNewItem">
                <MenuItem.Icon>
                    <Image Source="../Resources/addNewItemIconStatic.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Переименовать пункт"
                      Click="OnTreeViewRenameItem">
                <MenuItem.Icon>
                    <Image Source="../Resources/contextMenuRename.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Удалить"
                      Click="OnTreeViewDeleteItem">
                <MenuItem.Icon>
                    <Image Source="../Resources/contextMenuDeleteItem.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="treeViewContentItemContextMenu">
            <MenuItem Header="Добавить новый параграф"
                      Click="AddNewParagraph">
                <MenuItem.Icon>
                    <Image Source="../Resources/addNewItemIconStatic.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Переименовать пункт"
                      Click="OnTreeViewRenameItem">
                <MenuItem.Icon>
                    <Image Source="../Resources/contextMenuRename.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Удалить"
                      Click="OnTreeViewDeleteItem">
                <MenuItem.Icon>
                    <Image Source="../Resources/contextMenuDeleteItem.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="treeViewParagraphItemContextMenu">
            <MenuItem Header="Переименовать пункт"
                      Click="OnTreeViewRenameItem">
                <MenuItem.Icon>
                    <Image Source="../Resources/contextMenuRename.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Удалить"
                      Click="OnTreeViewDeleteItem">
                <MenuItem.Icon>
                    <Image Source="../Resources/contextMenuDeleteItem.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="treeViewContextMenu">
            <MenuItem Header="Добавить новый пункт"
                      Click="AddNewItemToRoot">
                <MenuItem.Icon>
                    <Image Source="../Resources/addNewItemIconStatic.png"></Image>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <Style x:Key="treeViewItemToggleBtnStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.Color"
                                                                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Border"
                                    Background="Transparent">
                                <ContentPresenter/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="treeViewInnerTextBoxStyle" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="Arial, Verdana"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                                BorderThickness="0">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          VerticalAlignment="Top"
                                          HorizontalAlignment="Stretch"
                                          VerticalScrollBarVisibility="Disabled"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="treeViewItemsItemStyle" TargetType="TreeViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1, 0, 0, 0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial, Verdana"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="ContextMenu" Value="{StaticResource treeViewItemItemContextMenu}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel Orientation="Vertical"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top">
                            <StackPanel Orientation="Horizontal"
                                        Height="25"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top">
                                <Grid>
                                    <ToggleButton x:Name="Expander"
                                                  Visibility="Visible"
                                                  Style="{StaticResource treeViewItemToggleBtnStyle}"
                                                  IsChecked="{Binding IsExpanded, 
                                                  RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Content>
                                            <Image x:Name="expanderImage"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Width="15"
                                                   Height="15"
                                                   Source="../Resources/showTheTreeItemItemsIcon.png"/>
                                        </ToggleButton.Content>
                                    </ToggleButton>
                                    <ToggleButton x:Name="Hider"
                                                  Visibility="Collapsed"
                                                  Style="{StaticResource treeViewItemToggleBtnStyle}"
                                                  IsChecked="{Binding IsExpanded, 
                                                  RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Content>
                                            <Image x:Name="hiderImage"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Width="15"
                                                   Height="15"
                                                   Source="../Resources/hideTheTreeItemItemsIcon.png"/>
                                        </ToggleButton.Content>
                                    </ToggleButton>
                                </Grid>
                                <Border x:Name="border"
                                        VerticalAlignment="Center"
                                        Margin="5, 0, 0, 0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <TextBox Text="{Binding HeaderText, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource treeViewInnerTextBoxStyle}"
                                             IsEnabled="{Binding IsEnabledForEdditing}"
                                             ContextMenu="{StaticResource treeViewItemItemContextMenu}"
                                             LostFocus="TreeViewItemTextBoxLostFocus"/>
                                </Border>
                            </StackPanel>
                            <ItemsPresenter x:Name="ItemsHost"
                                            Margin="15, 0, 0, 0"
                                            Visibility="Collapsed"/>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#E5E5E5" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="SelectedInactive">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#E5E5E5" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expander"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Hider"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expander"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Hider"
                                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <EventSetter Event="PreviewMouseDown" Handler="TreeViewItemMouseDown"/>
        </Style>

        <Style x:Key="treeViewContentItemStyle" TargetType="TreeViewItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,
                RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1, 0, 0, 0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial, Verdana"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="ContextMenu" Value="{StaticResource treeViewContentItemContextMenu}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel Orientation="Vertical"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top">
                            <StackPanel Orientation="Horizontal"
                                        Height="25"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Top">
                                <ToggleButton x:Name="Contenter"
                                              Visibility="Visible"
                                              Style="{StaticResource treeViewItemToggleBtnStyle}"
                                              IsChecked="{Binding IsExpanded, 
                                              RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Content>
                                        <Image x:Name="expanderImage"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               Width="15"
                                               Height="15"
                                               Source="{Binding ImageSource, UpdateSourceTrigger=PropertyChanged}"/>
                                    </ToggleButton.Content>
                                </ToggleButton>
                                <Border x:Name="border"
                                        VerticalAlignment="Center"
                                        Margin="5, 0, 0, 0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <TextBox x:Name="contentTextBox"
                                             Text="{Binding HeaderText, UpdateSourceTrigger=PropertyChanged}"
                                             Style="{StaticResource treeViewInnerTextBoxStyle}"
                                             IsEnabled="{Binding IsEnabledForEdditing}"
                                             ContextMenu="{StaticResource treeViewContentItemContextMenu}"
                                             LostFocus="TreeViewItemTextBoxLostFocus"/>
                                </Border>
                            </StackPanel>
                            <ItemsPresenter x:Name="ItemsHost"
                                            Margin="15, 0, 0, 0"
                                            Visibility="Collapsed"/>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#E5E5E5" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="SelectedInactive">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#E5E5E5" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                           Storyboard.TargetName="ItemsHost">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Collapsed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <EventSetter Event="PreviewMouseDown" Handler="TreeViewItemMouseDown"/>
        </Style>

        <Style x:Key="templateTreeViewStyle" TargetType="TreeView">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Width" Value="300"/>
            <Setter Property="Height" Value="350"/>
            <Setter Property="Background" Value="{StaticResource mainPageItemsGridBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ContextMenu" Value="{StaticResource treeViewContextMenu}"/>
            <Setter Property="Padding" Value="10, 10, 0, 0"/>
        </Style>

        <Style x:Key="hintTextBoxStyle" TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="Arial, Verdana"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Padding" Value="5, 2, 5, 2"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="border"
                                BorderThickness="1"
                                BorderBrush="LightGray"
                                CornerRadius="10"
                                VerticalAlignment="Top"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    
    <Page.Content>
        <ScrollViewer VerticalAlignment="Top"
                      HorizontalAlignment="Left"
                      Width="{Binding ElementName=documentTemplatesPage, Path=ActualWidth}"
                      Height="{Binding ElementName=documentTemplatesPage, Path=ActualHeight}">
            <StackPanel VerticalAlignment="Top"
                        HorizontalAlignment="Stretch"
                        Orientation="Vertical"
                        Margin="0, 0, 0, 20">
                <local:PageHeader x:Name="pageHeader"
                                  Header="Шаблоны"
                                  IsRefreshEnabled="False"
                                  VerticalAlignment="Top"
                                  Width="{Binding ElementName=documentTemplatesPage, Path=ActualWidth}"
                                  Height="86"
                                  HorizontalAlignment="Left"/>

                <StackPanel VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            Margin="20, 25, 0, 0"
                            Orientation="Horizontal">
                    <TextBlock x:Name="goToLocalDocumentation"
                               Text="Локальный шаблоны"
                               Style="{StaticResource templateTypesTextBlockStyle}"
                               PreviewMouseDown="GoToLocalTemplatesMode"/>
                    <TextBlock x:Name="goToCloudDocumentation"
                               Text="Облачные шаблоны"
                               Margin="20, 0, 0, 0"
                               Style="{StaticResource templateTypesTextBlockStyle}"
                               PreviewMouseDown="GoToCloudTemplatesMode"/>
                </StackPanel>

                <StackPanel x:Name="optionBtnsStackPanel"
                            Orientation="Horizontal"
                            Margin="20, 10, 0, 0"
                            VerticalAlignment="Top" 
                            HorizontalAlignment="Left">
                    <Button x:Name="createNewTemplateBtn"
                            Style="{StaticResource templatesProperteisBtnStyle}"
                            Margin="0, 0, 0, 0"
                            Click="CreateNewTemplate">
                        <TextBlock FontFamily="Arial, Verdana"
                                   FontSize="14"
                                   Foreground="{StaticResource mainThemeBrush}"
                                   Text="Создать"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"/>
                    </Button>
                    <Button x:Name="deleteSelectedTemplateBtn"
                            Style="{StaticResource templatesProperteisBtnStyle}"
                            Margin="10, 0, 0, 0"
                            Click="DeleteTemplate">
                        <TextBlock FontFamily="Arial, Verdana"
                                   FontSize="14"
                                   Foreground="{StaticResource mainThemeBrush}"
                                   Text="Удалить"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"/>
                    </Button>
                    <Button x:Name="saveAllTemplatesBtn"
                            Style="{StaticResource templatesProperteisBtnStyle}"
                            Margin="10, 0, 0, 0"
                            Width="150" 
                            Click="SaveAllTemplatesBtn">
                        <TextBlock FontFamily="Arial, Verdana"
                                   FontSize="14"
                                   Foreground="{StaticResource mainThemeBrush}"
                                   Text="Сохранить всё"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"/>
                    </Button>
                    <Button x:Name="saveCurrentTemplateBtn"
                            Style="{StaticResource templatesProperteisBtnStyle}"
                            Margin="10, 0, 0, 0"
                            Width="200"
                            Click="SaveCurrentTemplate">
                        <TextBlock FontFamily="Arial, Verdana"
                                   FontSize="14"
                                   Foreground="{StaticResource mainThemeBrush}"
                                   Text="Сохранить текущий шаблон"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"/>
                    </Button>
                </StackPanel>

                <StackPanel VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            Margin="20, 20, 0, 0"
                            Orientation="Horizontal">
                    <Grid Margin="0, 00, 0, 0">
                        <StackPanel x:Name="localTemplatesStackPanel"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Left"
                                    Orientation="Horizontal"
                                    Margin="0, 0, 0, 0">
                            <ListBox x:Name="localTemplatesListBox"
                                     Margin="0, 0, 0, 0"
                                     ItemTemplate="{StaticResource localTemplateListBoxDataTemplate}"
                                     Style="{StaticResource templatesListBoxStyle}"/>
                        </StackPanel>

                        <StackPanel x:Name="cloudTemplatesStackPanel"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Left"
                                    Visibility="Collapsed"
                                    Orientation="Horizontal"
                                    Margin="0, 0, 0, 0">
                            <ListBox x:Name="cloudTemplatesListBox"
                                     Margin="0, 0, 0, 0"
                                     Style="{StaticResource templatesListBoxStyle}"
                                     ItemTemplate="{StaticResource cloudTemplateListBoxDataTemplate}"/>
                        </StackPanel>
                    </Grid>

                    <StackPanel VerticalAlignment="Top"
                                HorizontalAlignment="Left"
                                Orientation="Vertical">
                        <TextBlock Text="Имя шаблона"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"
                                   Margin="10, 0, 0, 0"
                                   FontFamily="Arial, Verdana"
                                   Foreground="Gray"
                                   FontSize="13"/>
                        <TextBox x:Name="templateNameTextBox"
                                 Style="{StaticResource hintTextBoxStyle}"
                                 Margin="10, 0, 0, 10"
                                 TextChanged="TemplateTextBoxTextChanged"/>

                        <TextBlock Text="Подсказка"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"
                                   Margin="10, 0, 0, 0"
                                   FontFamily="Arial, Verdana"
                                   Foreground="Gray"
                                   FontSize="13"/>
                        <TextBox x:Name="hintTextBox"
                                 Style="{StaticResource hintTextBoxStyle}"
                                 Margin="10, 0, 0, 10"
                                 TextChanged="HintTextBoxTextChanged"/>
                        
                        <TreeView x:Name="templateTreeView"
                                  Margin="10, 0, 0, 0"
                                  Style="{StaticResource templateTreeViewStyle}"/>
                    </StackPanel>
                </StackPanel>

            </StackPanel>
        </ScrollViewer>
       
    </Page.Content>
</Page>
